package samayyu.assigmnent;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;

/**
 * Hello world!
 *
 */
public class App 
{
	public int add(int a, int b) {
		return a+b;
	}
	public String word(String s) {
		
		return s;
	}
	public static int countWords(String words) {
	
	char[] c = words.toCharArray();
	int count = 1;
	for(int i =0 ; i<c.length;i++) {
	if(c[i] == ' ') {
		if(i<c.length-1 && c[i+1]>= 'a' && c[i+1] <= 'z') {
		 count++;
		}
	}}
	
		return count;
	}
	
	public static String[] stringArray(String s) {
		String[] result = s.split(" ");
		return result;
	}
	public static int sameChar(char[] x , char[] y, int m,int n) {
		if(m == 0 || n == 0) {
			return 0;
		}
		if(x[m-1] == y[n-1]) {
			return 1+sameChar(x,y,m-1,n-1);
		}
		else{
			return max(sameChar(x, y, m, n-1),sameChar(x, y, m-1, n));
		}
	}
	public static int max(int a,int b) {
		return(a>b)? a:b ;
	}
	public static boolean isValid(char check , char para) {
		if(check =='{' && para =='}') {
			return true;
		}
		else if(check =='(' && para ==')') {
			return true;
		}
		else if(check =='[' && para ==']') {
			return true;
		}
		return false;
	}
	public static boolean balanceCheck(String s) {
		Stack<Character> character = new Stack<Character>();
		for(int i = 0; i<s.length();i++) {
			if(s.charAt(i) == '{' || s.charAt(i)=='(' || s.charAt(i) == '[') {
				character.push(s.charAt(i));
			}
			if(s.charAt(i) == '}' || s.charAt(i) == ')' || s.charAt(i) == ']') {
				if(!character.isEmpty() ) {
					if(isValid(character.peek(),s.charAt(i))) {
						character.pop();
					}else
						return false;
				}else
				return false;
			}
		}
		if(character.isEmpty()) {
			return true;
		}else
			return false;
	}
	
	
	public static List<String> add(String words){
		 List<String> linkedList = new LinkedList<String>();
		 long start = System.currentTimeMillis();
		for(int i =0; i<10000000; i++) {
			linkedList.add(words);
		}
		long end = System.currentTimeMillis();
		long finish = end - start;
		System.out.println("time " + finish);
		return linkedList;
	}
	public static List<String> addArray(String s){
		List<String> arrayList = new ArrayList<String>();
		long start = System.currentTimeMillis();
		for(int i = 0;i<10000000;i++) {
			arrayList.add(s);
		}
		long end = System.currentTimeMillis();
		long finish = end - start;
		System.out.println("time " + finish);
		return arrayList;
	}
	
	
    public static void main( String[] args )
    {
       App a = new App();
     /* String s1 = "axuyt";
      String s2 = "tyuxa";
      char[] x = s1.toCharArray();
      char[] y = s2.toCharArray();
      int m = x.length;
      int n = y.length;
      int count = App.sameChar(x, y, m, n);
      System.out.println(count);*/
       /*String words = "words";
     App.add(words);
     App.addArray(words);*/
   //  System.out.println(App.addArray(words));
       List<Integer> list = new LinkedList();
       List<Integer> evenList = new LinkedList();
       List<Integer> oddList = new LinkedList();
       List<Integer> allList = new LinkedList();
       Integer temp ;
	for (int i =0; i<10;i++){
	    list.add(i);
	}
	for (int j =0 ;j<list.size();j++) {
		temp = list.get(j);
		if(temp % 2 ==0){
	    evenList.add(temp);
	    }
		else {
	    	oddList.add(temp);
	    }
      }
	allList.addAll(evenList);
	allList.addAll(oddList);
    }
}
